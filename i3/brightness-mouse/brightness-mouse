#!/bin/sh

# This script requires you to configure a command that can be executed with sudo but
# without password.
#
# Use sudoers file to allow all users to write to the backlight file without sudo:
# Create new file: /etc/sudoers.d/brightness. This is similar to editing /etc/sudoers, but doesn't break on OS upgrades.
# Edit /etc/sudoers.d/brightness with sudo visudo -f /etc/sudoers.d/brightness. visudo prevents some issues.
# Paste into editor:
# ALL ALL = (ALL) NOPASSWD: /usr/bin/tee /sys/class/backlight/intel_backlight/brightness
# Save and close
# Write to the backlight file with:
# echo 5000000 | sudo /usr/bin/tee "/sys/class/backlight/intel_backlight/brightness"

dir=/sys/class/backlight/intel_backlight
tee=/usr/bin/tee

# Calibrate manually.
step=4000
min_value=10000
max_value=$(cat $dir/max_brightness)

get_curr() {
  cat $dir/actual_brightness
}

display() {
  p=$((100 * $(get_curr) / max_value))
  echo -e "<span color=\"#FFA500\">\uf185</span> $p%"
}

reset() {
  echo $max_value | sudo $tee $dir/brightness
}

turn_down() {
  new_val=$(($(get_curr) - $step))
  if [ "$new_val" -lt $min_value ]; then
    new_val=$min_value
  fi
  echo $new_val | sudo $tee $dir/brightness
}

turn_up() {
  new_val=$(($(get_curr)+ $step))
  if [ "$new_val" -gt $max_value ]; then
    new_val=$max_value
  fi
  echo $new_val | sudo $tee $dir/brightness
}

handle_change() {
    case $1 in
        1) turn_down ;;
        2) reset ;;
        3) turn_up ;;
        4) turn_up ;;
        5) turn_down ;;
    esac
}

read_mouse_events() {
  while IFS= read -r line; do
    handle_change $line
  done
}

subscribe() {
  inotifywait -m $dir -e modify |
  while read path action file; do
    if [[ "$file" == "actual_brightness" ]]; then
      display
    fi
  done
}

display
subscribe &
read_mouse_events
